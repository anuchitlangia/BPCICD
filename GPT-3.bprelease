<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>GPT-3</bpr:name>
    <bpr:release-notes />
    <bpr:created>2023-04-20 18:54:37Z</bpr:created>
    <bpr:package-id>8</bpr:package-id>
    <bpr:package-name>GPT-3</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="2">
        <credential id="37d1ba28-d0a6-4f68-a0d0-d92ac6edb28f" name="GPT-3 API Key" xmlns="http://www.blueprism.co.uk/product/credential">
            <description>API Key</description>
            <credentialType>BearerToken</credentialType>
            <members />
        </credential>
        <webapiservice id="2bc9754b-8545-4830-9667-9ab398b2cf9e" name="GPT-3" enabled="true" xmlns="http://www.blueprism.co.uk/product/webapiservice">
            <configuration baseurl="https://api.openai.com/[version]" xmlns="">
                <actions>
                    <action id="1" name="List Files" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Returns a list of files that belong to the user's organization.]]></description>
                        <request httpmethod="GET" urlpath="/files">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters></parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object return." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="data" description="The list of files returned." path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="2" name="Upload Files" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.]]></description>
                        <request httpmethod="POST" urlpath="/files">
                            <headers>
                                <httpheader name="Content-type" value="multipart/form-data; boundary=--------141234134312" />
                            </headers>
                            <bodycontent type="4">
                                <code><![CDATA[StringBuilder jsonBody = new StringBuilder();


jsonBody.Append("----------141234134312\n");
jsonBody.Append("Content-Disposition: form-data; name=\"purpose\"\n");
jsonBody.Append("\n");
jsonBody.Append("fine-tune\n");
jsonBody.Append("----------141234134312\n");
jsonBody.Append("Content-Disposition: form-data; name=\"file\"; filename=\"" + filename + "\"\n");
jsonBody.AppendLine("Content-Type: application/octet-stream\n");
jsonBody.Append("\n");
jsonBody.Append(ReadFile(upload_file)+"\n");
jsonBody.Append("----------141234134312--\n");

Request_Content = jsonBody.ToString();]]></code>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="filename" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="upload_file" expose="true" datatype="64">
                                <initialvalue><![CDATA["C:\file.txt"]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="purpose" expose="true" datatype="64">
                                <initialvalue><![CDATA["fine-tune"]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="bytes" description="File size." path="$.bytes" datatype="number" />
                                <customoutputparameter type="JsonPath" name="created_at" description="Date created." path="$.created_at" datatype="number" />
                                <customoutputparameter type="JsonPath" name="filename" description="Name of the file." path="$.filename" datatype="text" />
                                <customoutputparameter type="JsonPath" name="purpose" description="Defined intended use of the file." path="$.purpose" datatype="text" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="82" name="Delete File" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Delete a file.]]></description>
                        <request httpmethod="DELETE" urlpath="/files/[file_id]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="file_id" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the file to use for this request]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="deleted" description="Boolean value indicating whether the file was deleted or not." path="$.deleted" datatype="flag" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="83" name="Retrieve File" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Returns information about a specific file.]]></description>
                        <request httpmethod="GET" urlpath="/files/[file_id]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="file_id" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the file to use for this request]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="purpose" description="Defined intended use of the file." path="$.purpose" datatype="text" />
                                <customoutputparameter type="JsonPath" name="filename" description="Name of the file." path="$.filename" datatype="text" />
                                <customoutputparameter type="JsonPath" name="bytes" description="Size of the file." path="$.bytes" datatype="number" />
                                <customoutputparameter type="JsonPath" name="created_at" description="Date created." path="$.created_at" datatype="number" />
                                <customoutputparameter type="JsonPath" name="status" description="Status of the file." path="$.status" datatype="text" />
                                <customoutputparameter type="JsonPath" name="status_details" description="More status information." path="$.status_details" datatype="text" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="84" name="Retrieve File Content" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Returns the contents of the specified file. (This method will not work when downloading files set to 'fine-tune' with the free version of GPT-3)]]></description>
                        <request httpmethod="GET" urlpath="/files/[file_id]/content">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="file_id" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the file to use for this request]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters></parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="85" name="List Models" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Lists the currently available models, and provides basic information about each one such as the owner and availability.]]></description>
                        <request httpmethod="GET" urlpath="/models">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters></parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="data" description="List of available models." path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="86" name="Retreive Model" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Retrieves a model instance, providing basic information about the model such as the owner and permissioning.]]></description>
                        <request httpmethod="GET" urlpath="/models/[model]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the model to use for this request]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="created" description="Numeric identifier." path="$.created" datatype="number" />
                                <customoutputparameter type="JsonPath" name="owned_by" description="Owner of the model." path="$.owned_by" datatype="text" />
                                <customoutputparameter type="JsonPath" name="permission" description="Permission set of the model." path="$.permission" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="root" description="Model root dierectory." path="$.root" datatype="text" />
                                <customoutputparameter type="JsonPath" name="parent" description="Model parent." path="$.parent" datatype="text" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="87" name="Create Completion" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Creates a completion for the provided prompt and parameters]]></description>
                        <request httpmethod="POST" urlpath="/completions">
                            <headers>
                                <httpheader name="Content-Type" value="application/json" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[{
"model": "[model]",
"prompt": "[prompt]",
"max_tokens": [max_tokens],
"temperature": [temperature],
"echo": [echo],
"stream": [stream],
"logprobs": [logprobs],
"stop": "[stop]",
"presence_penalty": [presence_penalty],
"frequency_penalty": [frequency_penalty],
"best_of": [best_of],
"user": "[user]",
"top_p": [top_p],
"n": [n]
}]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[Required. ID of the model to use. You can use the List models API to see all of your available models, or see our Model overview for descriptions of them.]]></description>
                            </actionparameter>
                            <actionparameter name="prompt" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.]]></description>
                            </actionparameter>
                            <actionparameter name="suffix" expose="false" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The suffix that comes after a completion of inserted text.]]></description>
                            </actionparameter>
                            <actionparameter name="max_tokens" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[The maximum number of tokens to generate in the completion.]]></description>
                            </actionparameter>
                            <actionparameter name="temperature" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.]]></description>
                            </actionparameter>
                            <actionparameter name="n" expose="true" datatype="16">
                                <initialvalue><![CDATA[1]]></initialvalue>
                                <description><![CDATA[How many completions to generate for each prompt.]]></description>
                            </actionparameter>
                            <actionparameter name="stream" expose="false" datatype="64">
                                <initialvalue><![CDATA[false]]></initialvalue>
                                <description><![CDATA[Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.]]></description>
                            </actionparameter>
                            <actionparameter name="logprobs" expose="false" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.]]></description>
                            </actionparameter>
                            <actionparameter name="echo" expose="false" datatype="64">
                                <initialvalue><![CDATA[false]]></initialvalue>
                                <description><![CDATA[Echo back the prompt in addition to the completion]]></description>
                            </actionparameter>
                            <actionparameter name="stop" expose="false" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.]]></description>
                            </actionparameter>
                            <actionparameter name="presence_penalty" expose="false" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.]]></description>
                            </actionparameter>
                            <actionparameter name="frequency_penalty" expose="false" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.]]></description>
                            </actionparameter>
                            <actionparameter name="best_of" expose="false" datatype="16">
                                <initialvalue><![CDATA[1]]></initialvalue>
                                <description><![CDATA[Generates best_of completions server-side and returns the "best" (the one with the highest log probability per token). Results cannot be streamed.]]></description>
                            </actionparameter>
                            <actionparameter name="logit_bias" expose="false" datatype="1">
                                <initialvalue><![CDATA[<collection />]]></initialvalue>
                                <description><![CDATA[Modify the likelihood of specified tokens appearing in the completion.]]></description>
                            </actionparameter>
                            <actionparameter name="user" expose="false" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.]]></description>
                            </actionparameter>
                            <actionparameter name="top_p" expose="false" datatype="16">
                                <initialvalue><![CDATA[1]]></initialvalue>
                                <description><![CDATA[An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="created" description="Numeric identifier." path="$.created" datatype="number" />
                                <customoutputparameter type="JsonPath" name="model" description="Model used to create completion." path="$.model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="choices" description="List of possible choices." path="$.choices" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="usage" description="Data about token usage." path="$.usage" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="usage_prompt_tokens" description="Prompt tokens used." path="$.usage.prompt_tokens" datatype="number" />
                                <customoutputparameter type="JsonPath" name="usage_completion_tokens" description="Completion tokens used." path="$.usage.completion_tokens" datatype="number" />
                                <customoutputparameter type="JsonPath" name="usage_total_tokens" description="Total tokens used." path="$.usage.completion_tokens" datatype="number" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="88" name="Create Edit" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Creates a new edit for the provided input, instruction, and parameters.]]></description>
                        <request httpmethod="POST" urlpath="/edits">
                            <headers>
                                <httpheader name="Accept-Encoding" value="gzip, deflate, br" />
                                <httpheader name="Content-Type" value="application/json" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[{
  "model": "[model]",
  "input": "[input]",
  "instruction": "[instruction]",
  "n": [n],
  "temperature": [temperature],
  "top_p": [top_p]
}
]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[ID of the model to use. You can use the text-davinci-edit-001 or code-davinci-edit-001 model with this endpoint.]]></description>
                            </actionparameter>
                            <actionparameter name="input" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The input text to use as a starting point for the edit.]]></description>
                            </actionparameter>
                            <actionparameter name="instruction" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The instruction that tells the model how to edit the prompt.]]></description>
                            </actionparameter>
                            <actionparameter name="n" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[How many edits to generate for the input and instruction.]]></description>
                            </actionparameter>
                            <actionparameter name="temperature" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.]]></description>
                            </actionparameter>
                            <actionparameter name="top_p" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object used." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="created" description="Numeric identifier." path="$.created" datatype="number" />
                                <customoutputparameter type="JsonPath" name="choices" description="List ofchoices." path="$.choices" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="usage" description="Data about token usage." path="$.usage" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="usage_prompt_tokens" description="Prompt tokens used." path="$.usage.prompt_tokens" datatype="number" />
                                <customoutputparameter type="JsonPath" name="usage_completion_tokens" description="Completion tokens used." path="$.usage.completion_tokens" datatype="number" />
                                <customoutputparameter type="JsonPath" name="usage_total_tokens" description="Total tokens used." path="$.usage.total_tokens" datatype="number" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="89" name="Create Image" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Creates an image given a prompt.]]></description>
                        <request httpmethod="POST" urlpath="/images/generations">
                            <headers>
                                <httpheader name="Content-Type" value=" application/json" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[{
  "prompt": "[prompt]",
  "n": [n],
  "size": "[size]",
  "response_format": "[response_format]",
  "user": "[user]"
}]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="prompt" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A text description of the desired image(s). The maximum length is 1000 characters.]]></description>
                            </actionparameter>
                            <actionparameter name="n" expose="true" datatype="16">
                                <initialvalue><![CDATA[1]]></initialvalue>
                                <description><![CDATA[The number of images to generate. Must be between 1 and 10.]]></description>
                            </actionparameter>
                            <actionparameter name="size" expose="true" datatype="64">
                                <initialvalue><![CDATA[1024x1024]]></initialvalue>
                                <description><![CDATA[The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.]]></description>
                            </actionparameter>
                            <actionparameter name="response_format" expose="true" datatype="64">
                                <initialvalue><![CDATA[url]]></initialvalue>
                                <description><![CDATA[The format in which the generated images are returned. Must be one of url or b64_json.]]></description>
                            </actionparameter>
                            <actionparameter name="user" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="created" description="Numeric identifier." path="$.created" datatype="number" />
                                <customoutputparameter type="JsonPath" name="data" description="List of returned images." path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="115" name="Create Image Variation" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Creates a variation of a given image.]]></description>
                        <request httpmethod="POST" urlpath="/images/variations">
                            <headers>
                                <httpheader name="Content-Type" value="multipart/form-data; boundary=--------------------------541324604726599863346339" />
                            </headers>
                            <bodycontent type="4">
                                <code><![CDATA[StringBuilder jsonBody = new StringBuilder();

Byte[] bytes = File.ReadAllBytes(image_path);
Image image1 = Image.FromFile(image_path);

jsonBody.Append("----------------------------541324604726599863346339\n");
jsonBody.Append("Content-Disposition: form-data; name=\"image\"; filename=\"" + filename + "\"\n");
jsonBody.AppendLine("Content-Type: image/png\n");
jsonBody.Append(image1+"\n");
jsonBody.Append("----------------------------541324604726599863346339\n");
jsonBody.AppendLine("Content-Disposition: form-data; name=\"n\"\n");
jsonBody.Append(n+"\n");
jsonBody.Append("----------------------------541324604726599863346339--\n");
jsonBody.AppendLine("Content-Disposition: form-data; name=\"size\"\n");
jsonBody.Append(size+"\n");

Request_Content = jsonBody.ToString();]]></code>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="image_path" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="n" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="size" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="response_format" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="user" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                            <actionparameter name="filename" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="created" description="Numeric identifier." path="$.created" datatype="number" />
                                <customoutputparameter type="JsonPath" name="data" description="List of returned image variations" path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="116" name="Create Image Edit" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Creates an edited or extended image given an original image and a prompt.]]></description>
                        <request httpmethod="POST" urlpath="/images/edits">
                            <headers>
                                <httpheader name="Content-type" value="multipart/form-data; boundary=[boundary]" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[--[boundary]
Content-Disposition: form-data; name="image"; filename="filename.png"
Content-Type: image/png

[image]
--[boundary]
Content-Disposition: form-data; name="mask"; filename="img-gaRJOGUfgi54agt05bBzUdeS.png"
Content-Type: image/png

[mask]
--[boundary]
Content-Disposition: form-data; name="prompt"

[prompt]
--[boundary]
Content-Disposition: form-data; name="n"

[n]
--[boundary]
Content-Disposition: form-data; name="size"

[size]
--[boundary]--]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="image" expose="true" datatype="512">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.]]></description>
                            </actionparameter>
                            <actionparameter name="mask" expose="true" datatype="512">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.]]></description>
                            </actionparameter>
                            <actionparameter name="prompt" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A text description of the desired image(s). The maximum length is 1000 characters.]]></description>
                            </actionparameter>
                            <actionparameter name="n" expose="true" datatype="16">
                                <initialvalue><![CDATA[1]]></initialvalue>
                                <description><![CDATA[The number of images to generate. Must be between 1 and 10.]]></description>
                            </actionparameter>
                            <actionparameter name="size" expose="true" datatype="64">
                                <initialvalue><![CDATA["256x256"]]></initialvalue>
                                <description><![CDATA[The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.]]></description>
                            </actionparameter>
                            <actionparameter name="response_format" expose="true" datatype="64">
                                <initialvalue><![CDATA["url"]]></initialvalue>
                                <description><![CDATA[The format in which the generated images are returned. Must be one of url or b64_json.]]></description>
                            </actionparameter>
                            <actionparameter name="user" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. ]]></description>
                            </actionparameter>
                            <actionparameter name="boundary" expose="false" datatype="64">
                                <initialvalue><![CDATA["This is a sample boundary. Don't mess with it....................................13412341234132516"]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="created" description="Numeric identifer." path="$.created" datatype="number" />
                                <customoutputparameter type="JsonPath" name="data" description="List of returned images" path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="117" name="Create Fine-Tune" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Creates a job that fine-tunes a specified model from a given dataset.]]></description>
                        <request httpmethod="POST" urlpath="/fine-tunes">
                            <headers>
                                <httpheader name="Content-Type" value="application/json" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[{
  "training_file": "[training_file]",
  "validation_file": "[validation_file]",
  "model": "[model]",
  "n_epochs": [n_epochs],
  "batch_size": [batch_size],
  "learning_rate_multiplier": [learning_rate_multiplier],
  "prompt_loss_weight": [prompt_loss_weight],
  "compute_classification_metrics": [compute_classification_metrics],
  "classification_n_classes": [classification_n_classes],
  "classification_positive_class": "[classification_positive_class]",
  "classification_betas": [[[classification_betas]],
  "suffix": "[suffix]"
}]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="training_file" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of an uploaded file that contains training data.]]></description>
                            </actionparameter>
                            <actionparameter name="validation_file" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of an uploaded file that contains validation data.]]></description>
                            </actionparameter>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The name of the base model to fine-tune. You can select one of "ada", "babbage", "curie", "davinci", or a fine-tuned model created after 2022-04-21. To learn more about these models, see the Models documentation.]]></description>
                            </actionparameter>
                            <actionparameter name="n_epochs" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.]]></description>
                            </actionparameter>
                            <actionparameter name="batch_size" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[The batch size to use for training. The batch size is the number of training examples used to train a single forward and backward pass.]]></description>
                            </actionparameter>
                            <actionparameter name="learning_rate_multiplier" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[The learning rate multiplier to use for training. The fine-tuning learning rate is the original learning rate used for pretraining multiplied by this value.]]></description>
                            </actionparameter>
                            <actionparameter name="prompt_loss_weight" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[The weight to use for loss on the prompt tokens. This controls how much the model tries to learn to generate the prompt (as compared to the completion which always has a weight of 1.0), and can add a stabilizing effect to training when completions are short.]]></description>
                            </actionparameter>
                            <actionparameter name="compute_classification_metrics" expose="true" datatype="64">
                                <initialvalue><![CDATA[false]]></initialvalue>
                                <description><![CDATA[If set, we calculate classification-specific metrics such as accuracy and F-1 score using the validation set at the end of every epoch. These metrics can be viewed in the results file.]]></description>
                            </actionparameter>
                            <actionparameter name="classification_n_classes" expose="true" datatype="16">
                                <initialvalue><![CDATA[0]]></initialvalue>
                                <description><![CDATA[The number of classes in a classification task.]]></description>
                            </actionparameter>
                            <actionparameter name="classification_positive_class" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The positive class in binary classification.]]></description>
                            </actionparameter>
                            <actionparameter name="classification_betas" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[If this is provided, we calculate F-beta scores at the specified beta values. The F-beta score is a generalization of F-1 score. This is only used for binary classification.]]></description>
                            </actionparameter>
                            <actionparameter name="suffix" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A string of up to 40 characters that will be added to your fine-tuned model name.]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned" path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="model" description="Model used." path="$.model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="created_at" description="Date created." path="$.created_at" datatype="number" />
                                <customoutputparameter type="JsonPath" name="events" description="Data pertaining to specific fin-tune events." path="$.events" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="fine_tune_model" description="Fine tune model." path="$.fine_tune_model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="hyperparams" description="Hyperparameters used." path="$.hyperparams" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="organization_id" description="Organization id." path="$.organization_id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="result_files" description="Results of fine-tuneing." path="$.result_files" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="validation_files" description="Files to validate fine tune." path="$.validation_files" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="training_files" description="Training files." path="$.training_files" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="updated_at" description="Date updated." path="$.updated_at" datatype="number" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="143" name="Create Embeddings" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.]]></description>
                        <request httpmethod="POST" urlpath="/embeddings">
                            <headers>
                                <httpheader name="Content-Type" value="application/json" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[{
  "model": "[model]",
  "input": "[input]",
  "user": "[user]"
}
]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[ID of the model to use. You can use the List models API to see all of your available models, or see our Model overview for descriptions of them.]]></description>
                            </actionparameter>
                            <actionparameter name="input" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed 8192 tokens in length.]]></description>
                            </actionparameter>
                            <actionparameter name="user" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="data" description="List of date returned." path="$.data" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="model" description="Embedding model used." path="$.model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="usage" description="Data about token usage." path="$.usage" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="usage_prompt_tokens" description="Prompt tokens used." path="$.usage.prompt_tokens" datatype="text" />
                                <customoutputparameter type="JsonPath" name="usage_total_tokens" description="Total tokens used." path="$.usage.total_tokens" datatype="text" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="144" name="List Fine-Tunes" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[List your organization's fine-tuning jobs]]></description>
                        <request httpmethod="GET" urlpath="/fine-tunes">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters></parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="data" description="List of data returned." path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="145" name="Retreive Fine-Tune" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Gets info about the fine-tune job.]]></description>
                        <request httpmethod="GET" urlpath="/fine-tunes/[fine_tune_id]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="fine_tune_id" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the fine-tune job]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="model" description="Model used to create the fine-tune." path="$.model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="events" description="Data about the fine tune processes." path="$.events" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="updated_at" description="Date updated." path="$.updated_at" datatype="number" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="146" name="Cancel Fine-Tune" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Immediately cancel a fine-tune job.]]></description>
                        <request httpmethod="POST" urlpath="/fine-tunes/[fine_tune_id]/cancel">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="fine_tune_id" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the fine-tune job to cancel]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object used." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="model" description="Specific model used." path="$.model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="created_at" description="Date created." path="$.created_at" datatype="number" />
                                <customoutputparameter type="JsonPath" name="events" description="Data about the fine tune processes." path="$.events" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="fine_tuned_model" description="Fine tuned model." path="$.fine_tuned_model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="hyperparams" description="Hyperparameters used." path="$.hyperparams" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="organization_id" description="Organization id." path="$.organization_id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="result_files" description="Result files." path="$.result_files" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="status" description="Status of the fine-tune." path="$.status" datatype="text" />
                                <customoutputparameter type="JsonPath" name="validation_files" description="Validation files," path="$.validation_files" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="training_files" description="Training files." path="$.training_files" datatype="collection" />
                                <customoutputparameter type="JsonPath" name="updated_at" description="Date updated." path="$.updated_at" datatype="number" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="147" name="List Fine-Tune Events" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Get fine-grained status updates for a fine-tune job]]></description>
                        <request httpmethod="GET" urlpath="/fine-tunes/[fine_tune_id]/events?stream=[stream]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="fine_tune_id" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The ID of the fine-tune job to get events for.]]></description>
                            </actionparameter>
                            <actionparameter name="stream" expose="true" datatype="64">
                                <initialvalue><![CDATA[false]]></initialvalue>
                                <description><![CDATA[Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only server-sent events as they become available. The stream will terminate with a data: [DONE] message when the job is finished (succeeded, cancelled, or failed).]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="object" description="Type of object used." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="data" description="List of data returned." path="$.data" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="148" name="Delete Fine-Tune Model" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Delete a fine-tuned model. You must have the Owner role in your organization.]]></description>
                        <request httpmethod="DELETE" urlpath="/models/[model]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The model to delete]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier." path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="object" description="Type of object returned." path="$.object" datatype="text" />
                                <customoutputparameter type="JsonPath" name="deleted" description="Boolean value showing whether the file was deleted or not." path="$.deleted" datatype="text" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                    <action id="149" name="Create Moderation" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[/moderations]]></description>
                        <request httpmethod="POST" urlpath="/moderations">
                            <headers>
                                <httpheader name="Content-Type" value=" application/json" />
                            </headers>
                            <bodycontent type="1">
                                <template><![CDATA[{
    "input": "[input]",
    "model": "[model]"
}]]></template>
                            </bodycontent>
                        </request>
                        <parameters>
                            <actionparameter name="input" expose="true" datatype="64">
                                <initialvalue><![CDATA[]]></initialvalue>
                                <description><![CDATA[The input text to classify]]></description>
                            </actionparameter>
                            <actionparameter name="model" expose="true" datatype="64">
                                <initialvalue><![CDATA[text-moderation-latest]]></initialvalue>
                                <description><![CDATA[Two content moderations models are available: text-moderation-stable and text-moderation-latest.]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters>
                                <customoutputparameter type="JsonPath" name="id" description="Unique identifier" path="$.id" datatype="text" />
                                <customoutputparameter type="JsonPath" name="model" description="Model used." path="$.model" datatype="text" />
                                <customoutputparameter type="JsonPath" name="results" description="List of returned moderations data." path="$.results" datatype="collection" />
                            </parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                </actions>
                <commonparameters>
                    <actionparameter name="version" expose="false" datatype="64">
                        <initialvalue><![CDATA[v1]]></initialvalue>
                        <description><![CDATA[Current api version]]></description>
                    </actionparameter>
                </commonparameters>
                <commonheaders></commonheaders>
                <commonauthentications>
                    <authentication type="3">
                        <credential credentialname="GPT-3 API Key" exposetoprocess="false" inputparametername="" />
                    </authentication>
                </commonauthentications>
                <commoncode>
                    <codeproperties code="public string ReadFile(string filePath)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;string contents = File.ReadAllText(filePath);&#xD;&#xA;&#x9;&#x9;return contents;&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;public string ReadImage(string filePath)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;string contents = File.ReadAllText(filePath);&#xD;&#xA;&#x9;&#x9;return contents;&#xD;&#xA;&#x9;}" language="csharp">
                        <namespaces>
                            <namespace>System</namespace>
                            <namespace>System.Drawing</namespace>
                            <namespace>System.Data</namespace>
                            <namespace>System.IO</namespace>
                            <namespace>System.Text</namespace>
                        </namespaces>
                        <references>
                            <reference>System.dll</reference>
                            <reference>System.Data.dll</reference>
                            <reference>System.Xml.dll</reference>
                            <reference>System.Drawing.dll</reference>
                            <reference>System.IO.dll</reference>
                            <reference>MSCORLIB.dll</reference>
                        </references>
                    </codeproperties>
                </commoncode>
                <configurationsettings>
                    <configurationsettings requesttimeout="600" authserverrequesttimeout="10" />
                </configurationsettings>
            </configuration>
        </webapiservice>
    </bpr:contents>
</bpr:release>